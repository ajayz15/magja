#summary Setup magja project for development

= Setup developer environment  =

----
== Setup in Eclipse ==

=== Install Maven for Eclipse Plugin ===

On Eclipse, follow these instructions:

 # Select *Help* > *Install New Software*. This should display the "Install" dialog.
 # Paste the Update Site URL "http://m2eclipse.sonatype.org/sites/m2e" into the field named "Work with:" and press Enter. Pressing Enter should cause Eclipse to update list of available plugins and components.
 # Choose the component listed under m2eclipse: "Maven Integration for Eclipse (Required)".
 # Click Next. Eclipse will then check to see if there are any issues which would prevent a successful installation.
 # Click Next and agree to the terms of the Eclipse Public License v1.0.
 # Click Finish to begin the installation process. Eclipse will then download and install the necessary components.
 # Once the installation process is finished, Eclipse will ask you if you want to restart the IDE. It's strongly recommends that you restart your IDE after installing m2eclipse.

Source: [http://m2eclipse.sonatype.org/installing-m2eclipse.html]

=== Check out the project from SVN repository ===

We recommends to use Eclipse Subversive Plugin to use SVN on your eclipse, you can install it from the instructions: [http://www.eclipse.org/subversive/documentation/gettingStarted/aboutSubversive/install.php]

 # Once you have installed the subversive, go to "SVN Repository Exploring" perspective, click on the "New Repository Location" button (left-up).
 # The "New Repository Location" will pop-up, fill the URL field with the following http://magja.googlecode.com/svn/, then click Finish.
 # The new location will appear on left side of your perspective, just right-click on trunk folder and choose "Checkout As New Project"

=== Enable Project Dependency Management ===

Once you had check out the project, right-click on the project, the sub-menu will pop-up, then go to Maven->Enable Dependency Management.
Wait a little until all dependencies be downloaded to your maven repository.

To learn more about maven go to: [http://maven.apache.org/index.html]

=== Change the Magento Properties File ===

Change the file /src/main/resources/magento-api.properties with proper data to your magento installation.


That's all, to test if you can connect to magento API, run the "testConnectionLogin" method of the class "ConnectionTest" as JUnit Test.

----