#summary Setup magja project for development

= Setup developer environment  =

----
=== Install Eclipse ===
==== On Ubuntu: ====
 # Since Ubuntu Lucid Lynx 10.04 you have to add Canonical Partner repository "deb http://archive.canonical.com/ubuntu lucid partner" to your /etc/apt/sources.list first to by able to install sun-java6-jdk.
 # To install eclipse run this command in your terminal: *sudo apt-get install -y eclipse sun-java6-jdk*

=== Install Maven for Eclipse Plugin ===

On Eclipse, follow these instructions:

 # Select *Help* > *Install New Software*. This should display the "Install" dialog.
 # Paste following URL http://m2eclipse.sonatype.org/sites/m2e into the field named *Work with:* and press Add button. Confirm the "Add Site" dialog with OK. This should cause Eclipse to update list of available plugins and components.
 # Choose *"Maven Integration for Eclipse"* and press click Next >. Eclipse will then check to see if there are any issues which would prevent a successful installation.
 # Click *Next >* and agree to the terms of the Eclipse Public License v1.0.
 # Click *Finish* to begin the installation process. Eclipse will then download and install the necessary components.
 # If the "Selection needed" dialog appears, click *Select All* and then *OK* button
 # Once the installation process is finished, Eclipse will ask you if you want to restart the IDE. It's strongly recommends that you restart your IDE after installing m2eclipse.

Source: [http://m2eclipse.sonatype.org/installing-m2eclipse.html]

=== Check out the project from SVN repository ===

We recommends to use Eclipse Subversive Plugin to use SVN on your eclipse, you can install it from the instructions: [http://www.eclipse.org/subversive/documentation/gettingStarted/aboutSubversive/install.php]

 # Select *Help* > *Install New Software*. This should display the "Install" dialog.
 # Paste following URL "http://subclipse.tigris.org/update_1.6.x" into the field named *Work with:* and press Enter. This should cause Eclipse to update list of available plugins and components.

 # Once you have installed the subversive, go to "SVN Repository Exploring" perspective, click on the "New Repository Location" button (left-up).
 # The "New Repository Location" will pop-up, fill the URL field with the following http://magja.googlecode.com/svn/, then click Finish.
 # The new location will appear on left side of your perspective, just right-click on trunk folder and choose "Checkout As New Project"

=== Enable Project Dependency Management ===

Once you had check out the project, right-click on the project, the sub-menu will pop-up, then go to *Maven* > *Enable Dependency Management*. Wait a little until all dependencies be downloaded to your maven repository.

To learn more about maven go to: [http://maven.apache.org/index.html]

=== Change the Magento Connection Properties File ===

Change or create the file /src/main/resources/magento-api.properties with yout proper data to magento installation, for example:

{{{
# connection parameters
magento-api-username=yourMagentoApiUser
magento-api-password=youtMagentoApiPassword
magento-api-url=http://localhost/magento/index.php/api/soap/

# the ID of the default attribute set
default-attribute-set-id=4 
}}}


For test if you can connect to magento API, run the "testConnectionLogin" method of the class "ConnectionTest" as JUnit Test.

=== Extend Magento Product Attribute Api ===

For manipulate the Product Attribute on Magento, you need first extend de Product Attribute Api on Magento, just follow the instructions on that page: http://www.panticz.de/Extend-Magento-Product-Attribute-Api


----